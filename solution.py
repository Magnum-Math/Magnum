from manimlib.imports import *
from math import *
class Solution(GraphScene):
	def construct(self):
		watermark = ImageMobject("./assets/water_mark.png")
		watermark.scale(1.5)
		watermark.to_corner(DOWN+RIGHT, buff=0)
		self.play(FadeIn(watermark))
		Solve = TexMobject(r" Solve \ for \ x \ over \ the \ real \ numbers:")
		Solve.to_edge(UP)
		self.play(Write(Solve))
		align_mark = TextMobject( 'abs', fill_opacity=1)
		align_mark.to_edge(UP)
		align_mark.move_to(2*DOWN)
		align_mark.add()
		self.wait(1)
		R0 = TexMobject(r" x^{3} - x^{2} + 9 = 0")
		if R0.get_width() > 30:
			R0.stretch_to_fit_width(width=30)
		R1 = TexMobject(r" Eliminate \ the \ quadratic \ term \ by \ substituting \ y = x - 1/3:")
		if R1.get_width() > 30:
			R1.stretch_to_fit_width(width=30)
		R2 = TexMobject(r" 9 - (y + \frac{1}{3})^{2} + (y + \frac{1}{3})^{3} = 0")
		if R2.get_width() > 30:
			R2.stretch_to_fit_width(width=30)
		R3 = TexMobject(r" Expand \ out \ terms \ of \ the \ left \ hand \ side:")
		if R3.get_width() > 30:
			R3.stretch_to_fit_width(width=30)
		R4 = TexMobject(r" y^{3} - y/3 + 241/27 = 0")
		if R4.get_width() > 30:
			R4.stretch_to_fit_width(width=30)
		R5 = TexMobject(r" Change \ coordinates \ by \ substituting \ y = z + \lambda/z, \ where \ \lambda \ is \ a \ constant \ value \ that \ will \ be \ determined \ later:")
		if R5.get_width() > 30:
			R5.stretch_to_fit_width(width=30)
		R6 = TexMobject(r" 241/27 + \frac{1}{3} (-z - \lambda/z) + \frac{z + \lambda}{z}^3 = 0")
		if R6.get_width() > 30:
			R6.stretch_to_fit_width(width=30)
		R7 = TexMobject(r" Multiply \ both \ sides \ by \ z^{3} \ and \ collect \ in \ terms \ of \ z:")
		if R7.get_width() > 30:
			R7.stretch_to_fit_width(width=30)
		R8 = TexMobject(r" z^{6} + z^{4} (3 \lambda - \frac{1}{3}) + (241 z^{3})/27 + z^{2} (3 \lambda^{2} - \lambda/3) + \lambda^{3} = 0")
		if R8.get_width() > 30:
			R8.stretch_to_fit_width(width=30)
		R9 = TexMobject(r" Substitute \lambda = \frac{1}{9} \ and \ then \ u = z^{3}, \ yielding \ a \ quadratic \ equation \ in \ the \ variable \ u:")
		if R9.get_width() > 30:
			R9.stretch_to_fit_width(width=30)
		R10 = TexMobject(r" u^{2} + (241 u)/27 + \frac{1}{729} = 0")
		if R10.get_width() > 30:
			R10.stretch_to_fit_width(width=30)
		R11 = TexMobject(r" Find \ the \ positive \ solution \ to \ the \ quadratic \ equation:")
		if R11.get_width() > 30:
			R11.stretch_to_fit_width(width=30)
		R12 = TexMobject(r" u = \frac{1}{54} (9 \sqrt{717} - 241)")
		if R12.get_width() > 30:
			R12.stretch_to_fit_width(width=30)
		R13 = TexMobject(r" Substitute \ back \ for \ u = z^{3}:")
		if R13.get_width() > 30:
			R13.stretch_to_fit_width(width=30)
		R14 = TexMobject(r" z^{3} = \frac{1}{54} (9 \sqrt{717} - 241)")
		if R14.get_width() > 30:
			R14.stretch_to_fit_width(width=30)
		R15 = TexMobject(r" Taking \ cube \ roots \ gives \ (9 \sqrt{717} - 241)^{1/3} \times \ the \ third \ roots \ of \ unity:")
		if R15.get_width() > 30:
			R15.stretch_to_fit_width(width=30)
		R16 = TexMobject(r"NEWWWWWWadlfh")
		if R16.get_width() > 30:
			R16.stretch_to_fit_width(width=30)
		R17 = TexMobject(r" Substitute \ each \ value \ of \ z \ into \ y = z + 1/(9 z):")
		if R17.get_width() > 30:
			R17.stretch_to_fit_width(width=30)
		R18 = TexMobject(r" y = \frac{1}{3} ((9 \sqrt{717} - 241) / 2)^{1/3} - \frac{1}{3} (-1)^{2/3} (2/(241 - 9 \sqrt{717}))^{1/3} or y = \frac{1}{3} ((-2) / (241 - 9 \sqrt{717}))^{1/3} - \frac{1}{3} ((-1) / 2)^{1/3} (9 \sqrt{7")
		if R18.get_width() > 30:
			R18.stretch_to_fit_width(width=30)
		R19 = TexMobject(r" Bring \ each \ solution \ to \ a \ common \ denominator \ and \ simplify:")
		if R19.get_width() > 30:
			R19.stretch_to_fit_width(width=30)
		R20 = TexMobject(r" y = ((18 \sqrt{717} - 482)^{1/3} - (2 (-1)^{2/3}))/(241 - 9 \sqrt{717}^{1/3}))/(3^{2/3} 2^{2/3}) or y = ((-9 \sqrt{717} - 241)^{1/3} - (-1)^{1/3} (9 \sqrt{717} - 241)^{1/3}))/(3^{2/3} 2^{1/3})")
		if R20.get_width() > 30:
			R20.stretch_to_fit_width(width=30)
		R21 = TexMobject(r" Substitute \ back \ for \ x = y + 1/3:")
		if R21.get_width() > 30:
			R21.stretch_to_fit_width(width=30)
		R22 = TexMobject(r" x = ((18 \sqrt{717} - 482)^{1/3} - (2 (-1)^{2/3})/(241 - 9 \sqrt{717}))^{1/3})/(3^{2/3} 2^{2/3}) + 1/3 \ or \ x = ((-241 - 9 \sqrt{717})(-1)^{1/3} (9 \sqrt{717} - 241)^{1/3})/(3^{2/3} 2^{1/3")
		if R22.get_width() > 30:
			R22.stretch_to_fit_width(width=30)
		R0.next_to(align_mark,DOWN)
		self.play(Write(R0))
		self.wait(1)
		R1.next_to(R0, DOWN)
		self.play(Write(R1))
		self.wait(1)
		R2.next_to(R1, DOWN)
		self.play(Write(R2))
		self.wait(1)
		self.play(FadeOut(R0))
		self.play(ApplyMethod(R1.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R2.next_to,R1, DOWN))
		R3.next_to(R2, DOWN)
		self.play(Write(R3))
		self.play(FadeOut(R1))
		self.play(ApplyMethod(R2.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R3.next_to,R2, DOWN))
		R4.next_to(R3, DOWN)
		self.play(Write(R4))
		self.play(FadeOut(R2))
		self.play(ApplyMethod(R3.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R4.next_to,R3, DOWN))
		R5.next_to(R4, DOWN)
		self.play(Write(R5))
		self.play(FadeOut(R3))
		self.play(ApplyMethod(R4.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R5.next_to,R4, DOWN))
		R6.next_to(R5, DOWN)
		self.play(Write(R6))
		self.play(FadeOut(R4))
		self.play(ApplyMethod(R5.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R6.next_to,R5, DOWN))
		R7.next_to(R6, DOWN)
		self.play(Write(R7))
		self.play(FadeOut(R5))
		self.play(ApplyMethod(R6.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R7.next_to,R6, DOWN))
		R8.next_to(R7, DOWN)
		self.play(Write(R8))
		self.play(FadeOut(R6))
		self.play(ApplyMethod(R7.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R8.next_to,R7, DOWN))
		R9.next_to(R8, DOWN)
		self.play(Write(R9))
		self.play(FadeOut(R7))
		self.play(ApplyMethod(R8.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R9.next_to,R8, DOWN))
		R10.next_to(R9, DOWN)
		self.play(Write(R10))
		self.play(FadeOut(R8))
		self.play(ApplyMethod(R9.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R10.next_to,R9, DOWN))
		R11.next_to(R10, DOWN)
		self.play(Write(R11))
		self.play(FadeOut(R9))
		self.play(ApplyMethod(R10.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R11.next_to,R10, DOWN))
		R12.next_to(R11, DOWN)
		self.play(Write(R12))
		self.play(FadeOut(R10))
		self.play(ApplyMethod(R11.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R12.next_to,R11, DOWN))
		R13.next_to(R12, DOWN)
		self.play(Write(R13))
		self.play(FadeOut(R11))
		self.play(ApplyMethod(R12.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R13.next_to,R12, DOWN))
		R14.next_to(R13, DOWN)
		self.play(Write(R14))
		self.play(FadeOut(R12))
		self.play(ApplyMethod(R13.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R14.next_to,R13, DOWN))
		R15.next_to(R14, DOWN)
		self.play(Write(R15))
		self.play(FadeOut(R13))
		self.play(ApplyMethod(R14.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R15.next_to,R14, DOWN))
		R16.next_to(R15, DOWN)
		self.play(Write(R16))
		self.play(FadeOut(R14))
		self.play(ApplyMethod(R15.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R16.next_to,R15, DOWN))
		R17.next_to(R16, DOWN)
		self.play(Write(R17))
		self.play(FadeOut(R15))
		self.play(ApplyMethod(R16.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R17.next_to,R16, DOWN))
		R18.next_to(R17, DOWN)
		self.play(Write(R18))
		self.play(FadeOut(R16))
		self.play(ApplyMethod(R17.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R18.next_to,R17, DOWN))
		R19.next_to(R18, DOWN)
		self.play(Write(R19))
		self.play(FadeOut(R17))
		self.play(ApplyMethod(R18.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R19.next_to,R18, DOWN))
		R20.next_to(R19, DOWN)
		self.play(Write(R20))
		self.play(FadeOut(R18))
		self.play(ApplyMethod(R19.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R20.next_to,R19, DOWN))
		R21.next_to(R20, DOWN)
		self.play(Write(R21))
		self.play(FadeOut(R19))
		self.play(ApplyMethod(R20.next_to,align_mark,DOWN))
		self.play(ApplyMethod(R21.next_to,R20, DOWN))
		R22.next_to(R21, DOWN)
		self.play(Write(R22))
		self.play(FadeOut(R22))
		self.play(FadeOut(R21))
		self.play(FadeOut(R20))
		self.play(FadeOut(Solve))
		